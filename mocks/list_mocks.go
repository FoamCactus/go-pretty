// Code generated by MockGen. DO NOT EDIT.
// Source: list.go

// Package mock_gopretty is a generated GoMock package.
package mock_gopretty

import (
	gomock "github.com/golang/mock/gomock"
	go_pretty "github.com/jedib0t/go-pretty"
	reflect "reflect"
)

// MockListWriter is a mock of ListWriter interface
type MockListWriter struct {
	ctrl     *gomock.Controller
	recorder *MockListWriterMockRecorder
}

// MockListWriterMockRecorder is the mock recorder for MockListWriter
type MockListWriterMockRecorder struct {
	mock *MockListWriter
}

// NewMockListWriter creates a new mock instance
func NewMockListWriter(ctrl *gomock.Controller) *MockListWriter {
	mock := &MockListWriter{ctrl: ctrl}
	mock.recorder = &MockListWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockListWriter) EXPECT() *MockListWriterMockRecorder {
	return m.recorder
}

// AppendItem mocks base method
func (m *MockListWriter) AppendItem(item interface{}) {
	m.ctrl.Call(m, "AppendItem", item)
}

// AppendItem indicates an expected call of AppendItem
func (mr *MockListWriterMockRecorder) AppendItem(item interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AppendItem", reflect.TypeOf((*MockListWriter)(nil).AppendItem), item)
}

// AppendItems mocks base method
func (m *MockListWriter) AppendItems(items []interface{}) {
	m.ctrl.Call(m, "AppendItems", items)
}

// AppendItems indicates an expected call of AppendItems
func (mr *MockListWriterMockRecorder) AppendItems(items interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AppendItems", reflect.TypeOf((*MockListWriter)(nil).AppendItems), items)
}

// Indent mocks base method
func (m *MockListWriter) Indent() {
	m.ctrl.Call(m, "Indent")
}

// Indent indicates an expected call of Indent
func (mr *MockListWriterMockRecorder) Indent() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Indent", reflect.TypeOf((*MockListWriter)(nil).Indent))
}

// Length mocks base method
func (m *MockListWriter) Length() int {
	ret := m.ctrl.Call(m, "Length")
	ret0, _ := ret[0].(int)
	return ret0
}

// Length indicates an expected call of Length
func (mr *MockListWriterMockRecorder) Length() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Length", reflect.TypeOf((*MockListWriter)(nil).Length))
}

// Render mocks base method
func (m *MockListWriter) Render() string {
	ret := m.ctrl.Call(m, "Render")
	ret0, _ := ret[0].(string)
	return ret0
}

// Render indicates an expected call of Render
func (mr *MockListWriterMockRecorder) Render() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Render", reflect.TypeOf((*MockListWriter)(nil).Render))
}

// SetStyle mocks base method
func (m *MockListWriter) SetStyle(style go_pretty.ListStyle) {
	m.ctrl.Call(m, "SetStyle", style)
}

// SetStyle indicates an expected call of SetStyle
func (mr *MockListWriterMockRecorder) SetStyle(style interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetStyle", reflect.TypeOf((*MockListWriter)(nil).SetStyle), style)
}

// Style mocks base method
func (m *MockListWriter) Style() *go_pretty.ListStyle {
	ret := m.ctrl.Call(m, "Style")
	ret0, _ := ret[0].(*go_pretty.ListStyle)
	return ret0
}

// Style indicates an expected call of Style
func (mr *MockListWriterMockRecorder) Style() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Style", reflect.TypeOf((*MockListWriter)(nil).Style))
}
